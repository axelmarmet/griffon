@eq nat (Nat.add (a : nat) b) (Nat.add b a)

Tree(constructor_app,
[
    Tree(constructor_ind, [Tree(names__inductive, [Tree(constructor_mutind, [Tree(constructor_mpfile, [Tree(constructor_dirpath, [Token(__ANON_1, 'Logic'), Token(__ANON_1, 'Init'), Token(__ANON_1, 'Coq')])]), Tree(constructor_dirpath, []), Tree(names__label__t, [Token(__ANON_1, 'eq')])]), Tree(int, [Token(SIGNED_INT, '0')])]), Tree(constructor_instance, [])]),
    Tree(constructor_ind, [Tree(names__inductive, [Tree(constructor_mutind, [Tree(constructor_mpfile, [Tree(constructor_dirpath, [Token(__ANON_1, 'Datatypes'), Token(__ANON_1, 'Init'), Token(__ANON_1, 'Coq')])]), Tree(constructor_dirpath, []), Tree(names__label__t, [Token(__ANON_1, 'nat')])]), Tree(int, [Token(SIGNED_INT, '0')])]), Tree(constructor_instance, [])]),
    Tree(constructor_app,
    [
        Tree(constructor_const, [Tree(constructor_constant, [Tree(constructor_mpfile, [Tree(constructor_dirpath, [Token(__ANON_1, 'Nat'), Token(__ANON_1, 'Init'), Token(__ANON_1, 'Coq')])]), Tree(constructor_dirpath, []), Tree(names__label__t, [Token(__ANON_1, 'add')])]), Tree(constructor_instance, [])]),
        Tree(constructor_cast,
        [
            Tree(constructor_var,
            [
                Token(__ANON_1, 'a')
            ]),
            Tree(constructor_defaultcast, []),
            Tree(constructor_ind,
            [
                Tree(names__inductive,
                [
                    Tree(constructor_mutind,
                    [
                        Tree(constructor_mpfile,
                        [
                            Tree(constructor_dirpath,
                            [
                                Token(__ANON_1, 'Datatypes'),
                                Token(__ANON_1, 'Init'),
                                Token(__ANON_1, 'Coq')
                            ])
                        ]),
                        Tree(constructor_dirpath, []),
                        Tree(names__label__t,
                        [
                            Token(__ANON_1, 'nat')
                        ])
                    ]),
                    Tree(int, [Token(SIGNED_INT, '0')])
                ]),
                Tree(constructor_instance, [])
            ])
        ]), Tree(constructor_var, [Token(__ANON_1, 'b')])]), Tree(constructor_app, [Tree(constructor_const, [Tree(constructor_constant, [Tree(constructor_mpfile, [Tree(constructor_dirpath, [Token(__ANON_1, 'Nat'), Token(__ANON_1, 'Init'), Token(__ANON_1, 'Coq')])]), Tree(constructor_dirpath, []), Tree(names__label__t, [Token(__ANON_1, 'add')])]), Tree(constructor_instance, [])]), Tree(constructor_var, [Token(__ANON_1, 'b')]), Tree(constructor_var, [Token(__ANON_1, 'a')])])])