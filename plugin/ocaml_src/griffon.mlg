(* -------------------------------------------------------------------------- *)
(*                                                                            *)
(*                            Initial ritual dance                            *)
(*                                                                            *)
(* -------------------------------------------------------------------------- *)

DECLARE PLUGIN "griffon_plugin"

{
  (*** Dependencies from Coq ***)
  open Stdarg
  open Ltac_plugin
  (* open Pp *)
}

VERNAC COMMAND EXTEND predict CLASSIFIED AS QUERY
| [ "Predict" int(i) ] -> {
    let res = Interactor.predict i in
    Feedback.msg_notice (Pp.(++) (Pp.str "Predicted :") (Pp.real res))
  }
END

TACTIC EXTEND ser_env
| [ "Serialize"] ->
  { Hypserializer.serialize_env () }
END

TACTIC EXTEND log_env
| [ "Log" string(s)] ->
  { Hypserializer.log_env (s) }
END